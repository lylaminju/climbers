import { z } from "zod";

export const AvailabilitySchema = z.object({
  availability_id: z.string().uuid().optional(), // UUID, generated by DB if not provided
  post_id: z.string().uuid(),
  date: z.string().regex(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/, "Invalid date format (YYYY-MM-DD)"),
  start_time: z.string().regex(/^([01]\d|2[0-3]):[0-5]\d:[0-5]\d$/, "Invalid time format (HH:MM:SS)"),
  end_time: z.string().regex(/^([01]\d|2[0-3]):[0-5]\d:[0-5]\d$/, "Invalid time format (HH:MM:SS)"),
}).refine(
  (data) => data.end_time > data.start_time,
  {
    message: "end_time must be after start_time",
    path: ["end_time"],
  }
);

export type Availability = z.infer<typeof AvailabilitySchema>;
